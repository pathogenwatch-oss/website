{
  "name": "pathogenwatch-middle-end",
  "version": "8.4.10",
  "description": "Server-side code for Pathogenwatch",
  "main": "app.js",
  "engines": {
    "node": ">=6.x"
  },
  "dependencies": {
    "@geo-maps/countries-maritime-5m": "^0.6.0",
    "body-parser": "^1.10.1",
    "boundingbox": "^0.1.0",
    "bunyan": "^1.3.2",
    "cgps-user-accounts": "https://gitlab.com/cgps/cgps-user-accounts#v2.1.1",
    "connect-mongo": "^1.3.2",
    "cookie-parser": "^1.4.3",
    "country-iso-3-to-2": "^1.0.1",
    "csv": "^1.1.1",
    "docker-pull": "github:cgps-dev/docker-pull",
    "docker-run": "^3.0.0",
    "ejs": "^2.5.1",
    "escape-string-regexp": "^1.0.5",
    "event-stream": "3.3.4",
    "express": "^4.10.7",
    "express-content-length-validator": "^1.0.0",
    "express-session": "^1.14.2",
    "geojson-geometries-lookup": "^0.3.0",
    "http-auth": "^3.1.1",
    "longjohn": "^0.2.4",
    "mongo-message-queue": "^0.1.3",
    "mongodb-migrations": "^0.8.5",
    "mongoose": "^4.13.15",
    "morgan": "^1.5.1",
    "named-argv": "^0.3.0",
    "natsort": "^1.0.6",
    "pathogenwatch-fasta-store": "https://gitlab.com/cgps/pathogenwatch-fasta-store#v4.1.0",
    "pathogenwatch-front-end": "https://gitlab.com/cgps/pathogenwatch-front-end#v8.5.6",
    "promise-map-limit": "^1.0.0",
    "promisify-node": "^0.4.0",
    "pusher": "^1.1.0",
    "rand-token": "^0.4.0",
    "remove-markdown": "^0.2.2",
    "sanitize-filename": "^1.5.3",
    "seneca": "^3.5.0",
    "slug": "^0.9.1",
    "stream-transform": "^0.1.2",
    "zip-stream": "^1.2.0"
  },
  "devDependencies": {
    "eslint-config-cgps": "github:cgps-dev/eslint-config-cgps#v2.0.0",
    "mocha": "^2.5.3",
    "nodemon": "^1.18.7",
    "rewire": "^2.1.4",
    "sinon": "^1.12.2",
    "supertest": "^1.0.1"
  },
  "nodepath": "./src",
  "nodeopts": "",
  "startcmd": "NODE_PATH=$npm_package_nodepath nodemon $npm_package_nodeopts",
  "testcmd": "NODE_PATH=$npm_package_nodepath NODE_ENV='testing' mocha -t 60000 --reporter spec",
  "scripts": {
    "start": "eval $npm_package_startcmd start.js --seneca.log.quiet | bunyan -o short",
    "debug": "eval $npm_package_startcmd --inspect start.js --seneca.log.quiet | bunyan -o short",
    "test": "eval $npm_package_testcmd 'test/unit/**/*.test.js'",
    "test-example": "eval $npm_package_testcmd 'test/example.test.js'",
    "e2e": "eval $npm_package_testcmd 'test/e2e/**/*.test.js'",
    "upload": "eval $npm_package_startcmd bin/upload.js",
    "download": "eval $npm_package_startcmd bin/download.js",
    "reference": "eval $npm_package_startcmd bin/create-reference-collection.js",
    "aggregator": "eval $npm_package_startcmd microservices/bootstrap.js aggregator | bunyan -o short",
    "runner": "./bin/runner.sh",
    "speciator": "eval $npm_package_startcmd microservices/bootstrap.js runner --queue=speciator | bunyan -o short",
    "tasks": "eval $npm_package_startcmd microservices/bootstrap.js runner --queue=tasks | bunyan -o short",
    "cache": "eval $npm_package_startcmd microservices/bootstrap.js runner --queue=cache | bunyan -o short",
    "repost": "eval $npm_package_startcmd bin/repost-aggregator-errors.js",
    "metadata": "eval $npm_package_startcmd bin/update-collection-genomes.js",
    "mm": "NODE_PATH=$npm_package_nodepath mm",
    "migrate-collection": "eval $npm_package_startcmd microservices/bootstrap.js migrator",
    "rerun-collection": "eval $npm_package_startcmd microservices/bootstrap.js rerunner",
    "publish-collection": "eval $npm_package_startcmd microservices/bootstrap.js publisher",
    "centroids": "eval $npm_package_startcmd bin/add-centroids.js",
    "submit-genomes": "NODE_PATH=$npm_package_nodepath node ./bin/submit-genomes.js",
    "submit-task": "NODE_PATH=$npm_package_nodepath node ./bin/submit-task.js"
  },
  "repository": {
    "type": "git",
    "url": "https://gitlab.com/cgps/pathogenwatch-middle-end.git"
  },
  "author": "The Centre for Genomic Pathogen Surveillance",
  "bugs": {
    "url": "https://gitlab.com/cgps/pathogenwatch/roadmap"
  },
  "homepage": "https://pathogen.watch",
  "moduleRoots": [
    "src"
  ]
}
